name: Build documentation

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  pages: write
  contents: read
  checks: read

env:
  DOCKER_VERSION: '2025.03.8312'
  INSTANCE: 'Writerside/cv3-docs'
  ARTIFACT: 'webHelpCV3-DOCS2-all.zip'
  IS_GROUP: 'true'

jobs:
  render-graphviz:
    name: Render Graphviz diagrams
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Graphviz
        run: sudo apt-get install graphviz

      - name: Render Graphviz diagrams
        run: ./Writerside/codeSnippets/graphviz/render_image.sh

      - name: Save Graphviz diagrams
        uses: actions/upload-artifact@v4
        with:
          name: graphviz
          path: ./Writerside/images/gn-*.*

  build-swagger:
    name: Build Swagger-UI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Save swagger-ui folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: swagger-ui
          path: swagger-ui/*
          retention-days: 1

  build-documents:
    name: Build Documents
    needs: [render-graphviz]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Graphviz diagrams
        uses: actions/download-artifact@v4
        with:
          name: graphviz
          path: Writerside/images

      - name: Define instance id and artifacts
        id: define-ids
        run: |
          INSTANCE=${INSTANCE#*/}
          INSTANCE_ID_UPPER=$(echo "$INSTANCE" | tr '[:lower:]' '[:upper:]')
          ARTIFACT="webHelp${INSTANCE_ID_UPPER}2-all.zip"
          ALGOLIA_ARTIFACT="algolia-indexes-${INSTANCE_ID_UPPER}.zip"

          # Set the environment variables and outputs
          echo "INSTANCE_ID_UPPER=$INSTANCE_ID_UPPER" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "ALGOLIA_ARTIFACT=$ALGOLIA_ARTIFACT" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT
          echo "algolia_artifact=$ALGOLIA_ARTIFACT" >> $GITHUB_OUTPUT

      - name: Build documents
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}
          is-group: ${{ env.IS_GROUP }}

      - name: Save documents
        uses: actions/upload-artifact@v4
        with:
          name: documents
          path: artifacts/${{ env.ARTIFACT }}
          retention-days: 1

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: [build-swagger, build-documents]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Unzip documents
        run: unzip -O UTF-8 -qq documents/${{ env.ARTIFACT }} -d dir

      - name: Copy Swagger-UI
        run: mkdir -p dir/openapi && cp -r swagger-ui/* dir/openapi/

      - name: Wait for OpenAPI specs to be uploaded
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.ref }}
          check-name: 'Build and Upload OpenAPI Spec to Nexus'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Download OpenAPI specs
        run: |
          curl -o dir/openapi/cv3-all-bundled.yaml https://artifactory.cafevariome.org/repository/schemas/openapi/cv3-all-bundled.yaml
          curl -o dir/openapi/cv3-admin-bundled.yaml https://artifactory.cafevariome.org/repository/schemas/openapi/cv3-admin-bundled.yaml
          curl -o dir/openapi/cv3-network-bundled.yaml https://artifactory.cafevariome.org/repository/schemas/openapi/cv3-network-bundled.yaml
          curl -o dir/openapi/cv3-query-bundled.yaml https://artifactory.cafevariome.org/repository/schemas/openapi/cv3-query-bundled.yaml
          curl -o dir/openapi/cv3-bts-bundled.yaml https://artifactory.cafevariome.org/repository/schemas/openapi/cv3-bts-bundled.yaml

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Package and upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dir

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
